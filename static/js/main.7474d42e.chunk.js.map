{"version":3,"sources":["Scene.js","App.js","index.js"],"names":["Container","styled","div","Scene","sceneRef","useRef","useEffect","Engine","Matter","Render","World","Bodies","Mouse","MouseConstraint","engine","create","positionIterations","velocityIterations","render","element","current","options","width","height","wireframes","ball","circle","restitution","square","rectangle","add","world","isStatic","mouse","canvas","mouseConstraint","constraint","stiffness","visible","Events","on","event","run","ref","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"sUAIA,IAAMA,EAAYC,IAAOC,IAAV,KAiFAC,EA/ED,WACZ,IAAMC,EAAWC,iBAAO,MAuExB,OArEAC,qBAAU,WACR,IAAMC,EAASC,IAAOD,OACpBE,EAASD,IAAOC,OAChBC,EAAQF,IAAOE,MACfC,EAASH,IAAOG,OAChBC,EAAQJ,IAAOI,MACfC,EAAkBL,IAAOK,gBAErBC,EAASP,EAAOQ,OAAO,CAE3BC,mBAAoB,GACpBC,mBAAoB,KAGhBC,EAAST,EAAOM,OAAO,CAC3BI,QAASf,EAASgB,QAClBN,OAAQA,EACRO,QAAS,CACPC,MAAO,KACPC,OAAQ,IACRC,YAAY,KAKVC,EAAOd,EAAOe,OAAO,EAAG,EAAG,GAAI,CAAEC,YAAa,KAC9CC,EAASjB,EAAOkB,UAAU,IAAK,GAAI,GAAI,GAAI,CAAEF,YAAa,KAEhEjB,EAAMoB,IAAIhB,EAAOiB,MAAO,CAEtBpB,EAAOkB,UAAU,EAAG,EAAG,IAAM,GAAI,CAAEG,UAAU,IAE7CrB,EAAOkB,UAAU,EAAG,IAAK,IAAM,GAAI,CAAEG,UAAU,IAE/CrB,EAAOkB,UAAU,EAAG,IAAK,GAAI,IAAM,CAAEG,UAAU,IAE/CrB,EAAOkB,UAAU,IAAK,EAAG,GAAI,IAAM,CAAEG,UAAU,IAE/CrB,EAAOkB,UAAU,KAAM,EAAG,GAAI,IAAM,CAAEG,UAAU,MAGlDtB,EAAMoB,IAAIhB,EAAOiB,MAAO,CAACN,EAAMG,IAG/B,IAAMK,EAAQrB,EAAMG,OAAOG,EAAOgB,QAChCC,EAAkBtB,EAAgBE,OAAOD,EAAQ,CAC/CmB,MAAOA,EACPG,WAAY,CACVC,UAAW,GACXnB,OAAQ,CACNoB,SAAS,MAKjB5B,EAAMoB,IAAIhB,EAAOiB,MAAOI,GAExB3B,IAAO+B,OAAOC,GAAGL,EAAiB,aAAa,SAAUM,GAEvD/B,EAAMoB,IAAIhB,EAAOiB,MAAOpB,EAAOe,OAAO,IAAK,GAAI,GAAI,CAAEC,YAAa,MAGlEjB,EAAMoB,IAAIhB,EAAOiB,MAAOpB,EAAOkB,UAAU,IAAK,GAAI,GAAI,GAAI,CAAEF,YAAa,SAG3EpB,EAAOmC,IAAI5B,GACXL,EAAOiC,IAAIxB,KACV,IAGD,kBAAClB,EAAD,KACE,yBAAK2C,IAAKvC,M,qEC3EhB,IAAMJ,EAAYC,IAAOC,IAAV,KAUA0C,EARH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCJNC,IAAS3B,OACP,kBAAC,IAAM4B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7474d42e.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Matter from \"matter-js\";\n\nconst Container = styled.div``;\n\nconst Scene = () => {\n  const sceneRef = useRef(null);\n\n  useEffect(() => {\n    const Engine = Matter.Engine,\n      Render = Matter.Render,\n      World = Matter.World,\n      Bodies = Matter.Bodies,\n      Mouse = Matter.Mouse,\n      MouseConstraint = Matter.MouseConstraint;\n\n    const engine = Engine.create({\n      // the higher the value, the higher quality the simulation will be at the expense of performance\n      positionIterations: 10, // default: 6\n      velocityIterations: 10, // default: 4\n    });\n\n    const render = Render.create({\n      element: sceneRef.current,\n      engine: engine,\n      options: {\n        width: 1600,\n        height: 800,\n        wireframes: false,\n      },\n    });\n\n    // balls\n    const ball = Bodies.circle(0, 0, 30, { restitution: 0.5 });\n    const square = Bodies.rectangle(900, 50, 40, 40, { restitution: 0.7 });\n\n    World.add(engine.world, [\n      // top wall\n      Bodies.rectangle(0, 0, 4000, 50, { isStatic: true }),\n      // bottom wall\n      Bodies.rectangle(0, 800, 4000, 50, { isStatic: true }),\n      // left wall\n      Bodies.rectangle(0, 800, 50, 2000, { isStatic: true }),\n      // center wall\n      Bodies.rectangle(800, 0, 50, 2000, { isStatic: true }),\n      // right wall\n      Bodies.rectangle(1600, 0, 50, 2000, { isStatic: true }),\n    ]);\n\n    World.add(engine.world, [ball, square]);\n\n    // add mouse control\n    const mouse = Mouse.create(render.canvas),\n      mouseConstraint = MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false,\n          },\n        },\n      });\n\n    World.add(engine.world, mouseConstraint);\n\n    Matter.Events.on(mouseConstraint, \"mousedown\", function (event) {\n      // add circles on click\n      World.add(engine.world, Bodies.circle(100, 50, 30, { restitution: 0.7 }));\n\n      // add squares on click\n      World.add(engine.world, Bodies.rectangle(900, 50, 40, 40, { restitution: 0.7 }));\n    });\n\n    Engine.run(engine);\n    Render.run(render);\n  }, []);\n\n  return (\n    <Container>\n      <div ref={sceneRef} />\n    </Container>\n  );\n};\n\nexport default Scene;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Scene from \"./Scene\";\n\nconst Container = styled.div``;\n\nconst App = () => {\n  return (\n    <Container>\n      <Scene />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}